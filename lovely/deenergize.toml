[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# Patches to let us energize backwards
## Thank you Sonfive for figuring out how to do this
[[patches]]
[patches.pattern]
target = '=[SMODS Pokermon "functions/energyfunctions.lua"]'
position = "at"
match_indent = true
pattern = '''energize = function(card, etype, evolving, silent)'''
payload = '''energize = function(card, etype, evolving, silent, args)
  local energy_delta = (type(args) == 'table' and args.deenergize) and -1 or 1'''

[[patches]]
[patches.pattern]
target = '=[SMODS Pokermon "functions/energyfunctions.lua"]'
position = "at"
match_indent = true
pattern = '''local addition = energy_values[name]'''
payload = '''local addition = energy_values[name] * energy_delta'''

[[patches]]
[patches.pattern]
target = '=[SMODS Pokermon "functions/energyfunctions.lua"]'
position = "at"
match_indent = true
pattern = '''local increase = energy_values[k]'''
payload = '''local increase = energy_values[k] * energy_delta'''

[[patches]]
[patches.pattern]
target = '=[SMODS Pokermon "functions/energyfunctions.lua"]'
position = "at"
match_indent = true
pattern = '''if (card.ability.mult and card.ability.mult > 0) or (card.ability.t_mult and card.ability.t_mult > 0) then
  increase = energy_values.mult
elseif (card.ability.t_chips and card.ability.t_chips > 0) then
  increase = energy_values.chips
elseif (card.ability.x_mult and card.ability.x_mult > 1) then
  increase = energy_values.Xmult
end'''
payload = '''if (card.ability.mult and card.ability.mult > 0) or (card.ability.t_mult and card.ability.t_mult > 0) then
  increase = energy_values.mult * energy_delta
elseif (card.ability.t_chips and card.ability.t_chips > 0) then
  increase = energy_values.chips * energy_delta
elseif (card.ability.x_mult and card.ability.x_mult > 1) then
  increase = energy_values.Xmult * energy_delta
end'''
